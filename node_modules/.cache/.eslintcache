[{"/Users/santi/Desktop/TinyDesktop/Work/Gfecito.github.io/src/index.js":"1","/Users/santi/Desktop/TinyDesktop/Work/Gfecito.github.io/src/App.js":"2","/Users/santi/Desktop/TinyDesktop/Work/Gfecito.github.io/src/reportWebVitals.js":"3","/Users/santi/Desktop/TinyDesktop/Work/Gfecito.github.io/src/Components/Navbar.tsx":"4","/Users/santi/Desktop/TinyDesktop/Work/Gfecito.github.io/src/Components/Header.tsx":"5","/Users/santi/Desktop/TinyDesktop/Work/Gfecito.github.io/src/Components/Tabs.tsx":"6","/Users/santi/Desktop/TinyDesktop/Work/Gfecito.github.io/src/Components/HomeSections/Awards.tsx":"7","/Users/santi/Desktop/TinyDesktop/Work/Gfecito.github.io/src/Components/HomeSections/Experience.tsx":"8","/Users/santi/Desktop/TinyDesktop/Work/Gfecito.github.io/src/Components/HomeSections/Education.tsx":"9","/Users/santi/Desktop/TinyDesktop/Work/Gfecito.github.io/src/Components/HomeSections/Introduction.tsx":"10","/Users/santi/Desktop/TinyDesktop/Work/Website/src/index.js":"11","/Users/santi/Desktop/TinyDesktop/Work/Website/src/App.js":"12","/Users/santi/Desktop/TinyDesktop/Work/Website/src/reportWebVitals.js":"13","/Users/santi/Desktop/TinyDesktop/Work/Website/src/Components/Tabs.tsx":"14","/Users/santi/Desktop/TinyDesktop/Work/Website/src/Components/HomeSections/Education.tsx":"15","/Users/santi/Desktop/TinyDesktop/Work/Website/src/Components/HomeSections/Awards.tsx":"16","/Users/santi/Desktop/TinyDesktop/Work/Website/src/Components/HomeSections/Introduction.tsx":"17","/Users/santi/Desktop/TinyDesktop/Work/Website/src/Components/HomeSections/Experience.tsx":"18"},{"size":535,"mtime":1653329239909,"results":"19","hashOfConfig":"20"},{"size":2919,"mtime":1660138971147,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1653329239909,"results":"22","hashOfConfig":"20"},{"size":1117,"mtime":1658364462342,"results":"23","hashOfConfig":"20"},{"size":758,"mtime":1659631637387,"results":"24","hashOfConfig":"20"},{"size":3224,"mtime":1660084645629,"results":"25","hashOfConfig":"20"},{"size":1022,"mtime":1660084440467,"results":"26","hashOfConfig":"20"},{"size":1070,"mtime":1660084697660,"results":"27","hashOfConfig":"20"},{"size":2009,"mtime":1660084901322,"results":"28","hashOfConfig":"20"},{"size":2332,"mtime":1660085142371,"results":"29","hashOfConfig":"20"},{"size":535,"mtime":1653329239909,"results":"30","hashOfConfig":"31"},{"size":2920,"mtime":1660144053990,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1653329239909,"results":"33","hashOfConfig":"31"},{"size":3305,"mtime":1660144854132,"results":"34","hashOfConfig":"31"},{"size":2071,"mtime":1660144820840,"results":"35","hashOfConfig":"31"},{"size":1066,"mtime":1660144801433,"results":"36","hashOfConfig":"31"},{"size":2422,"mtime":1660144370576,"results":"37","hashOfConfig":"31"},{"size":1115,"mtime":1660144828650,"results":"38","hashOfConfig":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nl6k9h",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cgrp6p",{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"/Users/santi/Desktop/TinyDesktop/Work/Gfecito.github.io/src/index.js",[],[],"/Users/santi/Desktop/TinyDesktop/Work/Gfecito.github.io/src/App.js",[],[],"/Users/santi/Desktop/TinyDesktop/Work/Gfecito.github.io/src/reportWebVitals.js",[],[],"/Users/santi/Desktop/TinyDesktop/Work/Gfecito.github.io/src/Components/Navbar.tsx",[],[],"/Users/santi/Desktop/TinyDesktop/Work/Gfecito.github.io/src/Components/Header.tsx",[],[],"/Users/santi/Desktop/TinyDesktop/Work/Gfecito.github.io/src/Components/Tabs.tsx",["96","97","98"],[],"import React from \"react\";\n\ninterface Props {\n    big_title: string,\n    titles: string[],\n    descriptions: string[][],\n    illustrations: string[],\n    prefix: string\n}\n\n\n// Put arrow on selected tab =)\nclass Tabs extends React.PureComponent<Props>{\n    rendered_page_index = 0;\n\n    openProject = (id: number) => {\n        this.rendered_page_index = id;\n        this.forceUpdate();\n    }\n\n    render() {\n        const { big_title, titles, descriptions, illustrations, prefix } = this.props;\n        const openProject = this.openProject.bind(this);\n        let tabs = [];\n        let pages = [];\n        let rendered_page;\n\n        // Dispatch abbreviation logic.\n        const filter = (word: string) => { return (((word.charAt(0)) >= '0' && (word.charAt(0)) <= '9') || (word.length <= 5)); };\n        const initialCapitalizer = (word: string) => { return (word.charAt(0).toUpperCase()) };\n        const adaptPhraseAndJoin = (phrase: string, filter: (any) => boolean, newWord: (string) => string) => {\n            return (phrase.split(\" \").map(word =>\n                (filter(word) ? word + \" \" : newWord(word))).join(\"\"));\n        };\n        const firstThree = (word: string) => { return (initialCapitalizer(word) + word.substr(1, 2)) };\n\n        // Make buttons with abbreviations\n        for (let i = 0; i < titles.length; i++) {\n            let words = titles[i].split(\" \");\n            let abbreviation;\n\n\n            if (words.length == 1) abbreviation = words[0].substr(0, 14)\n            if (words.length == 2) abbreviation = adaptPhraseAndJoin(titles[i], filter, firstThree)\n            if (words.length > 2) abbreviation = adaptPhraseAndJoin(titles[i], filter, initialCapitalizer)\n            tabs.push(\n                <button className={prefix + \"Tabs\"} key={\"tab-button-\"+prefix+\"-\"+i} onClick={() => { openProject(i) }}>\n                    {abbreviation}\n                </button>\n            );\n        }\n\n\n        for (let i = 0; i < titles.length; i++) {\n            const key = prefix + titles + i;\n            pages.push(\n                <div id={key} key={key} className=\"tabContent\">\n                    <div className=\"tabDescriptor\">\n                        <h3>{titles[i]}</h3>\n                        {descriptions[i].map(paragraph => <p key={\"tab-descriptor-\"+i+paragraph.substr(0,3)}>{paragraph}</p>)}\n                    </div>\n                    <div className=\"tabDisplay\">\n                        <img src={illustrations[i]} alt=\"Illustrative Image\" />\n                    </div>\n                </div>\n            );\n        }\n\n        rendered_page = pages[this.rendered_page_index];\n\n        return (\n            <section id={prefix}>\n                <h1>{big_title}</h1>\n                <div id={prefix + \"Window\"} className=\"tabs_and_content\">\n                    <div id={prefix + \"Tabs\"} className=\"tabs\" style={{ gridTemplateRows: \"repeat(\" + titles.length + \",minmax(min-content,max-content))\" }}>\n                        {tabs}\n                    </div>\n                    <div id={prefix + \"Content\"} className=\"content\">\n                        {rendered_page}\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\n\nexport default Tabs","/Users/santi/Desktop/TinyDesktop/Work/Gfecito.github.io/src/Components/HomeSections/Awards.tsx",[],[],"/Users/santi/Desktop/TinyDesktop/Work/Gfecito.github.io/src/Components/HomeSections/Experience.tsx",[],[],"/Users/santi/Desktop/TinyDesktop/Work/Gfecito.github.io/src/Components/HomeSections/Education.tsx",[],[],"/Users/santi/Desktop/TinyDesktop/Work/Gfecito.github.io/src/Components/HomeSections/Introduction.tsx",[],[],"/Users/santi/Desktop/TinyDesktop/Work/Website/src/index.js",[],[],"/Users/santi/Desktop/TinyDesktop/Work/Website/src/App.js",[],[],[],"/Users/santi/Desktop/TinyDesktop/Work/Website/src/reportWebVitals.js",[],[],"/Users/santi/Desktop/TinyDesktop/Work/Website/src/Components/Tabs.tsx",[],[],"/Users/santi/Desktop/TinyDesktop/Work/Website/src/Components/HomeSections/Education.tsx",[],[],"/Users/santi/Desktop/TinyDesktop/Work/Website/src/Components/HomeSections/Awards.tsx",[],[],"/Users/santi/Desktop/TinyDesktop/Work/Website/src/Components/HomeSections/Introduction.tsx",[],[],[],"/Users/santi/Desktop/TinyDesktop/Work/Website/src/Components/HomeSections/Experience.tsx",[],[],{"ruleId":"99","severity":1,"message":"100","line":43,"column":30,"nodeType":"101","messageId":"102","endLine":43,"endColumn":32},{"ruleId":"99","severity":1,"message":"100","line":44,"column":30,"nodeType":"101","messageId":"102","endLine":44,"endColumn":32},{"ruleId":"103","severity":1,"message":"104","line":63,"column":25,"nodeType":"105","endLine":63,"endColumn":80},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]